# -*- coding: utf-8 -*-
"""rozpoznanie_obiektu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-HU6a0bXX-al-2ACQ2zd9Vy0zF438BbT

#CNN
"""

import tensorflow as tf
from keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt
from tensorflow.keras.models import load_model

train_datagen = ImageDataGenerator(
        rescale=1./255,
        shear_range=0.2,
        horizontal_flip=True)

train_generator = train_datagen.flow_from_directory(
        '/content/drive/MyDrive/Colab Notebooks/obiekt/Zdjecia_2',
        target_size=(64, 64),
        batch_size=32,
        class_mode='categorical')

test_datagen = ImageDataGenerator(rescale=1./255)

test_generator = test_datagen.flow_from_directory(
        '/content/drive/MyDrive/Colab Notebooks/obiekt/test_photo_2',
        target_size=(64, 64),
        batch_size=32,
        class_mode='categorical')

"""## Moja architektóra"""

cnn = tf.keras.models.Sequential()

cnn.add(tf.keras.layers.Conv2D(filters = 32, kernel_size= 3, activation='relu', input_shape = [64,64,3] ))
cnn.add(tf.keras.layers.MaxPool2D(pool_size= 2, strides=2))
cnn.add(tf.keras.layers.Dropout(0.5))

cnn.add(tf.keras.layers.Conv2D(filters = 64, kernel_size= 3, activation='relu'))
cnn.add(tf.keras.layers.MaxPool2D(pool_size= 2, strides=2))
cnn.add(tf.keras.layers.Dropout(0.5))

cnn.add(tf.keras.layers.Conv2D(filters = 128, kernel_size= 3, activation='relu'))
cnn.add(tf.keras.layers.MaxPool2D(pool_size= 2, strides=2))
cnn.add(tf.keras.layers.Dropout(0.5))

cnn.add(tf.keras.layers.Conv2D(filters = 32, kernel_size= 3, activation='tanh'))
cnn.add(tf.keras.layers.MaxPool2D(pool_size= 2, strides=2))
cnn.add(tf.keras.layers.Flatten())

cnn.add(tf.keras.layers.Dense(128, activation='relu'))
cnn.add(tf.keras.layers.Dense(3, activation='softmax'))

cnn.compile(optimizer ='adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])
cnn.fit(train_generator,validation_data = test_generator, epochs = 70)

cnn.save("object_detection.h5")

import numpy as np
from keras.preprocessing import image
from PIL import Image


test_img_main = image.load_img('/content/drive/MyDrive/Colab Notebooks/obiekt/test_photo_2/biały/test3.jpg',target_size=(64,64))
test_img = image.img_to_array(test_img_main)
test_img = np.expand_dims(test_img, axis= 0)
resoult = cnn.predict(test_img)

print(resoult)
kategoria_resoult = np.argmax(resoult)
print(kategoria_resoult)

kategorie = [kategoria_resoult]

for i,kat in enumerate(kategorie):
  if kat == 0:
      kategorie[i] = 'biały kolcek'
  elif kat == 1:
      kategorie[i] = 'czerowny kolcek'
  elif kat == 2:
      kategorie[i] = 'niebieski kolcek'

plt.imshow(test_img_main)
plt.title(kategorie[0])
plt.show()